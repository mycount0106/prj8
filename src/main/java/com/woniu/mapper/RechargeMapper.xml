<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.mapper.RechargeMapper">
  <resultMap id="BaseResultMap" type="com.woniu.entity.Recharge">
    <id column="rechargeid" jdbcType="INTEGER" property="rechargeid" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="walletid" jdbcType="INTEGER" property="walletid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rechargeid, account, money, createtime, walletid, uid
  </sql>
  <select id="selectByExample" parameterType="com.woniu.entity.RechargeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recharge
    where rechargeid = #{rechargeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recharge
    where rechargeid = #{rechargeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.entity.RechargeExample">
    delete from recharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.entity.Recharge">
    insert into recharge (rechargeid, account, money, 
      createtime, walletid, uid
      )
    values (#{rechargeid,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, 
      #{createtime,jdbcType=DATE}, #{walletid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.entity.Recharge">
    insert into recharge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rechargeid != null">
        rechargeid,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="walletid != null">
        walletid,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rechargeid != null">
        #{rechargeid,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="walletid != null">
        #{walletid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.entity.RechargeExample" resultType="java.lang.Long">
    select count(*) from recharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update recharge
    <set>
      <if test="record.rechargeid != null">
        rechargeid = #{record.rechargeid,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.walletid != null">
        walletid = #{record.walletid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update recharge
    set rechargeid = #{record.rechargeid,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      createtime = #{record.createtime,jdbcType=DATE},
      walletid = #{record.walletid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.entity.Recharge">
    update recharge
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="walletid != null">
        walletid = #{walletid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where rechargeid = #{rechargeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.entity.Recharge">
    update recharge
    set account = #{account,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      createtime = #{createtime,jdbcType=DATE},
      walletid = #{walletid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER}
    where rechargeid = #{rechargeid,jdbcType=INTEGER}
  </update>
</mapper>